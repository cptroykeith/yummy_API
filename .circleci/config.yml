version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.5.0

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
      - image: circleci/python:3.8.0
        environment:
          ENV: CIRCLE
          SQLALCHEMY_DATABASE_URI: postgresql://circleci@localhost/circle_test
      - image: circleci/postgres:9.6
        environment:
          PGHOST: localhost
          PGUSER: circleci
          POSTGRES_USER: circleci
          POSTGRES_DB: circle_test
          POSTGRES_HOST_AUTH_METHOD: trust
    steps:
      - checkout
      - python/load-cache
      - run:
          name: Wait for db to run
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          command: pip3 install -r requirements.txt
      - python/save-cache
      - run:
          name: Running tests
          command: pytest
      - store_test_results:
          path: test-reports.xml
      - store_artifacts:
          path: test-reports/
          destination: python_app

workflows:
  main:
    jobs:
      - build-and-test
